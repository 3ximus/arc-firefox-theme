// Drawing mixins

// Entries

@mixin entry($t, $dark:false) {
//
// Entries drawing function
//
  //@extend %reset_style;
    box-shadow: inset 0 0 transparentize($base_color, 1);

  @if $t==normal {
    color: $text_color;
    background-color: $entry_bg;
    border: 1px solid $entry_border;
  }

  @if $t==focus {
    color: $fg_color;
    background-color: $entry_bg;
    border: 1px solid $selected_bg_color;
  }

  @if $t==insensitive {
    color: $insensitive_fg_color;
    background-color: mix($entry_bg, $bg_color, 55%);
    border-color: 1px solid mix($entry_border, $bg_color, 55%);
  }
}

// Buttons

@mixin button($t) {
//
// Button drawing function
//

  @if $t==normal {
  //
  // normal button
  //
    color: $fg_color;
    background-color: $button_bg;
    border: 1px solid $button_border;
  }

  @else if $t==focus {
  //
  // focused button
  //
    color: $fg_color;
    background-color: $button_bg;
    border: 1px solid $selected_bg_color;
  }

  @else if $t==focus-hover {
  //
  // focused button
  //
    color: $selected_bg_color;
    background-color: $button_bg;
    border: 1px solid $selected_bg_color;
  }

  @else if $t==hover {
  //
  // hovered button
  //
    color: $fg_color;
    background-color: $button_bg;
    border: 1px solid $selected_bg_color;
  }

  @else if $t==active {
  //
  // pushed button
  //
    color: $selected_fg_color;
    background-color: $selected_bg_color;
    border: 1px solid $selected_bg_color;
  }

  @else if $t==insensitive {
  //
  // insensitive button
  //
    color: $insensitive_fg_color;
    border: 1px solid transparentize($button_border, 0.45);
    background-color: transparentize($button_bg, 0.45);
  }

  $_header_button_bg: if($darker == 'true' or $variant == 'dark', transparentize(darken($header_bg, 3%), 0.1), transparentize($button_bg, 0.1));
  $_header_button_border: if($darker == 'true' or $variant == 'dark', darken($header_bg, 8%), transparentize($header_fg, 0.7));

  @if $t==header-normal {
  //
  // normal header-bar button
  //
    color: $header_fg;
    background-color: transparentize($header_bg, 1);
    border-color: transparentize($header_bg, 1);
  }

  @else if $t==header-hover {
  //
  // hovered header-bar button
  //
    color: $header_fg;
    border-color: $_header_button_border;
    background-color: $_header_button_bg;
  }

  @else if $t==header-active {
  //
  // pushed header-bar button
  //
    color: $selected_fg_color;
    border-color: $selected_bg_color;
    background-color: $selected_bg_color;
  }

  @else if $t==header-insensitive {
  //
  // insensitive header-bar button
  //
    color: transparentize($header_fg, 0.45);
    background-color: transparentize($header_bg, 1);
    border-color: transparentize($header_bg, 1);

    > GtkLabel { color: inherit; }
  }

  @else if $t==header-insensitive-active {
  //
  // header-bar insensitive pushed button
  //
    color: transparentize($selected_fg_color, 0.25);
    border-color: transparentize($selected_bg_color, 0.35);
    background-color: transparentize($selected_bg_color, 0.35);
  }
}
